/**
* @file: main.cpp
* @author: xxx
* @mail: xxx@yyy.com
* @date 2019-12-05 14:59:09
* @brief
**/
#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
using namespace std;
using vecint = vector<int>;
using vecintiter = vector<int>::iterator;


vecint* merge(vecint* vecarr1, vecint* vecarr2){
    int len = vecarr2->size();
    for(int i=0; i< len;i++){
        vecarr1->push_back(vecarr2->at(i));
    }
    return vecarr1;
}


void printArr(vecint* vecintptr){
    if(vecintptr->empty()){
        return ;
    }

    string tmp;
    int size = vecintptr->size();

    for(int i=0; i < size;i++) {
        string strtmp(to_string(vecintptr->at(i))+",");
        tmp.append(strtmp);
    }
    cout << tmp << endl;
}

class Cls{
    public:
        Cls(int value):val(value){};
        int val;
};


Cls* test(){
    Cls* ptr = new Cls(10);
    return ptr;
}


int main(){
    vecint vecarr1 = {1, 2};
    vecint vecarr2 = {3, 4};
    vecint* ptr = merge(&vecarr1, &vecarr2);

    printArr(ptr);
    
    Cls* ins = test();
    cout << "ins: " << ins->val << endl;
    //int* tmp = testint();
    //cout << "tmp: " << *tmp << endl;
    return 0;
}

